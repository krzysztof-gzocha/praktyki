name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Sprawdzanie kodu
        uses: actions/checkout@v2

      - name: Install MicroK8s
        uses: balchua/microk8s-actions@v0.4.0
        with:
          channel: '1.30/stable'
          addons: '["dns", "rbac", "hostpath-storage", "registry", "metrics-server", "ingress", "storage", "dashboard", "prometheus"]'

      - name: Instalacja Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          
      - name: Instalacja Gitea
        run: |
          sudo microk8s helm repo add gitea https://dl.gitea.io/charts
          sudo microk8s helm repo update
          sudo microk8s helm install gitea gitea/gitea --namespace gitea --create-namespace

      - name: Tworzenie namespace nginx
        run: |
          sudo microk8s kubectl create namespace nginx || true

      - name: Tworzenie konta usługi
        run: |
          echo "apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: default
            namespace: nginx" | sudo microk8s kubectl apply -f -

      - name: Instalacja Nginx
        run: |
          sudo microk8s kubectl run nginx --image=nginx --port=80 --namespace=nginx
          sudo microk8s kubectl expose pod nginx --type=NodePort --name=nginx-service --port=80 --target-port=80 --namespace=nginx

      - name: Kubernetes Cluster
        run: |
          sudo newgrp microk8s || true
          sudo microk8s kubectl cluster-info

      - name: Helm
        run: |
          newgrp microk8s || true
          helm upgrade --install gitea-environment ./gitea-environment
          
      - name: Sprawdzenie dostępnych podów
        run: |
          echo "Sprawdzam dostępne pody..."
          sudo microk8s kubectl get pods --show-labels

     - name: Running pod delete chaos experiment
      uses: litmuschaos/github-chaos-actions@v0.4.0
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        ##If litmus is not installed
        INSTALL_LITMUS: true
        ##Give application info under chaos
        APP_NS: default
        APP_LABEL: run=nginx
        APP_KIND: deployment
        EXPERIMENT_NAME: pod-delete
        ##Custom images can also be used
        EXPERIMENT_IMAGE: litmuschaos/go-runner
        EXPERIMENT_IMAGE_TAG: latest
        IMAGE_PULL_POLICY: Always
        TOTAL_CHAOS_DURATION: 30
        CHAOS_INTERVAL: 10
        FORCE: false
        ##Select true if you want to uninstall litmus after chaos
        LITMUS_CLEANUP: true

      - name: Sprawdzenie stanu zdrowia podów
        run: |
          set -e
          echo "Sprawdzanie zdrowia podów..."
          for pod in whoami grafana gitea prometheus; do
            echo "Sprawdzam pod: $pod"
            status=$(sudo microk8s kubectl get pod -l app=$pod -o jsonpath='{.items[0].status.containerStatuses[0].ready}')
            if [ "$status" != "true" ]; then
              echo "Pod $pod nie jest gotowy!"
              exit 1
            fi
          done
          echo "Wszystkie pody są zdrowe!"
